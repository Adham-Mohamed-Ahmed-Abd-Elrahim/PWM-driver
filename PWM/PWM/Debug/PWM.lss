
PWM.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000006c0  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000734  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000002  00800060  00800060  00000734  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000734  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000764  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000048  00000000  00000000  000007a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000007ad  00000000  00000000  000007e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000064e  00000000  00000000  00000f95  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000003a8  00000000  00000000  000015e3  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000058  00000000  00000000  0000198c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000036c  00000000  00000000  000019e4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000186  00000000  00000000  00001d50  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000028  00000000  00000000  00001ed6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	20 e0       	ldi	r18, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a2 36       	cpi	r26, 0x62	; 98
  6c:	b2 07       	cpc	r27, r18
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 3e 00 	call	0x7c	; 0x7c <main>
  74:	0c 94 5e 03 	jmp	0x6bc	; 0x6bc <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <main>:
#include "PWM.h"
#include <util/delay.h>


int main(void)
{PWM_INI(FAST_PWM,NON_INVERTED,_8);
  7c:	41 e0       	ldi	r20, 0x01	; 1
  7e:	60 e0       	ldi	r22, 0x00	; 0
  80:	80 e0       	ldi	r24, 0x00	; 0
  82:	0e 94 5c 00 	call	0xb8	; 0xb8 <PWM_INI>
	
    /* Replace with your application code */
    while (1) 
    {GENERATE_WAVE(75);
  86:	60 e0       	ldi	r22, 0x00	; 0
  88:	70 e0       	ldi	r23, 0x00	; 0
  8a:	86 e9       	ldi	r24, 0x96	; 150
  8c:	92 e4       	ldi	r25, 0x42	; 66
  8e:	0e 94 02 01 	call	0x204	; 0x204 <GENERATE_WAVE>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  92:	8f ef       	ldi	r24, 0xFF	; 255
  94:	9c e7       	ldi	r25, 0x7C	; 124
  96:	01 97       	sbiw	r24, 0x01	; 1
  98:	f1 f7       	brne	.-4      	; 0x96 <main+0x1a>
  9a:	00 c0       	rjmp	.+0      	; 0x9c <main+0x20>
  9c:	00 00       	nop
		_delay_ms(8);
		GENERATE_WAVE(30);
  9e:	60 e0       	ldi	r22, 0x00	; 0
  a0:	70 e0       	ldi	r23, 0x00	; 0
  a2:	80 ef       	ldi	r24, 0xF0	; 240
  a4:	91 e4       	ldi	r25, 0x41	; 65
  a6:	0e 94 02 01 	call	0x204	; 0x204 <GENERATE_WAVE>
  aa:	8f ef       	ldi	r24, 0xFF	; 255
  ac:	9c e7       	ldi	r25, 0x7C	; 124
  ae:	01 97       	sbiw	r24, 0x01	; 1
  b0:	f1 f7       	brne	.-4      	; 0xae <main+0x32>
  b2:	00 c0       	rjmp	.+0      	; 0xb4 <main+0x38>
  b4:	00 00       	nop
  b6:	e7 cf       	rjmp	.-50     	; 0x86 <main+0xa>

000000b8 <PWM_INI>:
 #include "PWM.h"
 static uint8_t mode; 
 static uint8_t comp; 
void PWM_INI(uint8_t MODE,uint8_t COMPARE_MODE,uint8_t prescale )
{//Enble force compare match for wave generating
	SET_BIT(TCCR0,FOC0);
  b8:	93 b7       	in	r25, 0x33	; 51
  ba:	90 68       	ori	r25, 0x80	; 128
  bc:	93 bf       	out	0x33, r25	; 51
	//setting OC0 AS OUTPUT 
	SET_BIT(DDRB,3);
  be:	bb 9a       	sbi	0x17, 3	; 23
	//CHHOSING MODE 
	switch(MODE)
  c0:	88 23       	and	r24, r24
  c2:	19 f0       	breq	.+6      	; 0xca <PWM_INI+0x12>
  c4:	81 30       	cpi	r24, 0x01	; 1
  c6:	51 f0       	breq	.+20     	; 0xdc <PWM_INI+0x24>
  c8:	13 c0       	rjmp	.+38     	; 0xf0 <PWM_INI+0x38>
	{case FAST_PWM : SET_BIT(TCCR0,WGM00);SET_BIT(TCCR0,WGM01);mode=0;break;
  ca:	83 b7       	in	r24, 0x33	; 51
  cc:	80 64       	ori	r24, 0x40	; 64
  ce:	83 bf       	out	0x33, r24	; 51
  d0:	83 b7       	in	r24, 0x33	; 51
  d2:	88 60       	ori	r24, 0x08	; 8
  d4:	83 bf       	out	0x33, r24	; 51
  d6:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <mode>
  da:	10 c0       	rjmp	.+32     	; 0xfc <PWM_INI+0x44>
		case PHASE_CORRECT : SET_BIT(TCCR0,WGM00);CLR_BIT(TCCR0,WGM01);mode=1;break;
  dc:	83 b7       	in	r24, 0x33	; 51
  de:	80 64       	ori	r24, 0x40	; 64
  e0:	83 bf       	out	0x33, r24	; 51
  e2:	83 b7       	in	r24, 0x33	; 51
  e4:	87 7f       	andi	r24, 0xF7	; 247
  e6:	83 bf       	out	0x33, r24	; 51
  e8:	81 e0       	ldi	r24, 0x01	; 1
  ea:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <mode>
  ee:	06 c0       	rjmp	.+12     	; 0xfc <PWM_INI+0x44>
		//default fast pwm
		default:SET_BIT(TCCR0,WGM00);SET_BIT(TCCR0,WGM01);break;
  f0:	83 b7       	in	r24, 0x33	; 51
  f2:	80 64       	ori	r24, 0x40	; 64
  f4:	83 bf       	out	0x33, r24	; 51
  f6:	83 b7       	in	r24, 0x33	; 51
  f8:	88 60       	ori	r24, 0x08	; 8
  fa:	83 bf       	out	0x33, r24	; 51
	}
	
	switch(COMPARE_MODE)
  fc:	61 30       	cpi	r22, 0x01	; 1
  fe:	79 f0       	breq	.+30     	; 0x11e <PWM_INI+0x66>
 100:	28 f0       	brcs	.+10     	; 0x10c <PWM_INI+0x54>
 102:	62 30       	cpi	r22, 0x02	; 2
 104:	b1 f0       	breq	.+44     	; 0x132 <PWM_INI+0x7a>
 106:	63 30       	cpi	r22, 0x03	; 3
 108:	f1 f0       	breq	.+60     	; 0x146 <PWM_INI+0x8e>
 10a:	27 c0       	rjmp	.+78     	; 0x15a <PWM_INI+0xa2>
	{case NON_INVERTED:CLR_BIT(TCCR0,COM00);SET_BIT(TCCR0,COM01);comp=0;break;
 10c:	83 b7       	in	r24, 0x33	; 51
 10e:	8f 7e       	andi	r24, 0xEF	; 239
 110:	83 bf       	out	0x33, r24	; 51
 112:	83 b7       	in	r24, 0x33	; 51
 114:	80 62       	ori	r24, 0x20	; 32
 116:	83 bf       	out	0x33, r24	; 51
 118:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
 11c:	2a c0       	rjmp	.+84     	; 0x172 <PWM_INI+0xba>
		case INVERTED:SET_BIT(TCCR0,COM00);SET_BIT(TCCR0,COM01);comp=1;break;
 11e:	83 b7       	in	r24, 0x33	; 51
 120:	80 61       	ori	r24, 0x10	; 16
 122:	83 bf       	out	0x33, r24	; 51
 124:	83 b7       	in	r24, 0x33	; 51
 126:	80 62       	ori	r24, 0x20	; 32
 128:	83 bf       	out	0x33, r24	; 51
 12a:	81 e0       	ldi	r24, 0x01	; 1
 12c:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
 130:	20 c0       	rjmp	.+64     	; 0x172 <PWM_INI+0xba>
		case CLR_UP_SET_DOWN: CLR_BIT(TCCR0,COM00);SET_BIT(TCCR0,COM01);comp=2;break;
 132:	83 b7       	in	r24, 0x33	; 51
 134:	8f 7e       	andi	r24, 0xEF	; 239
 136:	83 bf       	out	0x33, r24	; 51
 138:	83 b7       	in	r24, 0x33	; 51
 13a:	80 62       	ori	r24, 0x20	; 32
 13c:	83 bf       	out	0x33, r24	; 51
 13e:	82 e0       	ldi	r24, 0x02	; 2
 140:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
 144:	16 c0       	rjmp	.+44     	; 0x172 <PWM_INI+0xba>
		case SET_UP_CLR_DOWN: SET_BIT(TCCR0,COM00);SET_BIT(TCCR0,COM01);comp=3;break;
 146:	83 b7       	in	r24, 0x33	; 51
 148:	80 61       	ori	r24, 0x10	; 16
 14a:	83 bf       	out	0x33, r24	; 51
 14c:	83 b7       	in	r24, 0x33	; 51
 14e:	80 62       	ori	r24, 0x20	; 32
 150:	83 bf       	out	0x33, r24	; 51
 152:	83 e0       	ldi	r24, 0x03	; 3
 154:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
 158:	0c c0       	rjmp	.+24     	; 0x172 <PWM_INI+0xba>
		
		//default non_inverted in fast pwm or clr up set down in phase correct 
		default:CLR_BIT(TCCR0,COM00);SET_BIT(TCCR0,WGM01);SET_BIT(TCCR0,WGM00);SET_BIT(TCCR0,COM01);break;
 15a:	83 b7       	in	r24, 0x33	; 51
 15c:	8f 7e       	andi	r24, 0xEF	; 239
 15e:	83 bf       	out	0x33, r24	; 51
 160:	83 b7       	in	r24, 0x33	; 51
 162:	88 60       	ori	r24, 0x08	; 8
 164:	83 bf       	out	0x33, r24	; 51
 166:	83 b7       	in	r24, 0x33	; 51
 168:	80 64       	ori	r24, 0x40	; 64
 16a:	83 bf       	out	0x33, r24	; 51
 16c:	83 b7       	in	r24, 0x33	; 51
 16e:	80 62       	ori	r24, 0x20	; 32
 170:	83 bf       	out	0x33, r24	; 51
	}
	switch (prescale)
 172:	42 30       	cpi	r20, 0x02	; 2
 174:	f9 f0       	breq	.+62     	; 0x1b4 <PWM_INI+0xfc>
 176:	28 f4       	brcc	.+10     	; 0x182 <PWM_INI+0xca>
 178:	44 23       	and	r20, r20
 17a:	41 f0       	breq	.+16     	; 0x18c <PWM_INI+0xd4>
 17c:	41 30       	cpi	r20, 0x01	; 1
 17e:	81 f0       	breq	.+32     	; 0x1a0 <PWM_INI+0xe8>
 180:	37 c0       	rjmp	.+110    	; 0x1f0 <PWM_INI+0x138>
 182:	43 30       	cpi	r20, 0x03	; 3
 184:	09 f1       	breq	.+66     	; 0x1c8 <PWM_INI+0x110>
 186:	44 30       	cpi	r20, 0x04	; 4
 188:	49 f1       	breq	.+82     	; 0x1dc <PWM_INI+0x124>
 18a:	32 c0       	rjmp	.+100    	; 0x1f0 <PWM_INI+0x138>
	{case _1:SET_BIT(TCCR0,CS00);CLR_BIT(TCCR0,CS01);CLR_BIT(TCCR0,CS02);break;
 18c:	83 b7       	in	r24, 0x33	; 51
 18e:	81 60       	ori	r24, 0x01	; 1
 190:	83 bf       	out	0x33, r24	; 51
 192:	83 b7       	in	r24, 0x33	; 51
 194:	8d 7f       	andi	r24, 0xFD	; 253
 196:	83 bf       	out	0x33, r24	; 51
 198:	83 b7       	in	r24, 0x33	; 51
 19a:	8b 7f       	andi	r24, 0xFB	; 251
 19c:	83 bf       	out	0x33, r24	; 51
 19e:	08 95       	ret
		
		case _8:CLR_BIT(TCCR0,CS00);SET_BIT(TCCR0,CS01);CLR_BIT(TCCR0,CS02);break;
 1a0:	83 b7       	in	r24, 0x33	; 51
 1a2:	8e 7f       	andi	r24, 0xFE	; 254
 1a4:	83 bf       	out	0x33, r24	; 51
 1a6:	83 b7       	in	r24, 0x33	; 51
 1a8:	82 60       	ori	r24, 0x02	; 2
 1aa:	83 bf       	out	0x33, r24	; 51
 1ac:	83 b7       	in	r24, 0x33	; 51
 1ae:	8b 7f       	andi	r24, 0xFB	; 251
 1b0:	83 bf       	out	0x33, r24	; 51
 1b2:	08 95       	ret
		case _64:SET_BIT(TCCR0,CS00);SET_BIT(TCCR0,CS01);CLR_BIT(TCCR0,CS02);break;
 1b4:	83 b7       	in	r24, 0x33	; 51
 1b6:	81 60       	ori	r24, 0x01	; 1
 1b8:	83 bf       	out	0x33, r24	; 51
 1ba:	83 b7       	in	r24, 0x33	; 51
 1bc:	82 60       	ori	r24, 0x02	; 2
 1be:	83 bf       	out	0x33, r24	; 51
 1c0:	83 b7       	in	r24, 0x33	; 51
 1c2:	8b 7f       	andi	r24, 0xFB	; 251
 1c4:	83 bf       	out	0x33, r24	; 51
 1c6:	08 95       	ret
		case _256:CLR_BIT(TCCR0,CS00);CLR_BIT(TCCR0,CS01);SET_BIT(TCCR0,CS02);break;
 1c8:	83 b7       	in	r24, 0x33	; 51
 1ca:	8e 7f       	andi	r24, 0xFE	; 254
 1cc:	83 bf       	out	0x33, r24	; 51
 1ce:	83 b7       	in	r24, 0x33	; 51
 1d0:	8d 7f       	andi	r24, 0xFD	; 253
 1d2:	83 bf       	out	0x33, r24	; 51
 1d4:	83 b7       	in	r24, 0x33	; 51
 1d6:	84 60       	ori	r24, 0x04	; 4
 1d8:	83 bf       	out	0x33, r24	; 51
 1da:	08 95       	ret
		case _1024:SET_BIT(TCCR0,CS00);CLR_BIT(TCCR0,CS01);SET_BIT(TCCR0,CS02);break;
 1dc:	83 b7       	in	r24, 0x33	; 51
 1de:	81 60       	ori	r24, 0x01	; 1
 1e0:	83 bf       	out	0x33, r24	; 51
 1e2:	83 b7       	in	r24, 0x33	; 51
 1e4:	8d 7f       	andi	r24, 0xFD	; 253
 1e6:	83 bf       	out	0x33, r24	; 51
 1e8:	83 b7       	in	r24, 0x33	; 51
 1ea:	84 60       	ori	r24, 0x04	; 4
 1ec:	83 bf       	out	0x33, r24	; 51
 1ee:	08 95       	ret
		//default /64
		default:SET_BIT(TCCR0,CS00);SET_BIT(TCCR0,CS01);CLR_BIT(TCCR0,CS02);break;
 1f0:	83 b7       	in	r24, 0x33	; 51
 1f2:	81 60       	ori	r24, 0x01	; 1
 1f4:	83 bf       	out	0x33, r24	; 51
 1f6:	83 b7       	in	r24, 0x33	; 51
 1f8:	82 60       	ori	r24, 0x02	; 2
 1fa:	83 bf       	out	0x33, r24	; 51
 1fc:	83 b7       	in	r24, 0x33	; 51
 1fe:	8b 7f       	andi	r24, 0xFB	; 251
 200:	83 bf       	out	0x33, r24	; 51
 202:	08 95       	ret

00000204 <GENERATE_WAVE>:
		
	}
}
void GENERATE_WAVE(float DUTY_CYLCE)
{
switch(mode)
 204:	20 91 61 00 	lds	r18, 0x0061	; 0x800061 <mode>
 208:	22 23       	and	r18, r18
 20a:	21 f0       	breq	.+8      	; 0x214 <GENERATE_WAVE+0x10>
 20c:	21 30       	cpi	r18, 0x01	; 1
 20e:	09 f4       	brne	.+2      	; 0x212 <GENERATE_WAVE+0xe>
 210:	44 c0       	rjmp	.+136    	; 0x29a <GENERATE_WAVE+0x96>
 212:	08 95       	ret
{case FAST_PWM:
	switch(comp)
 214:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 218:	22 23       	and	r18, r18
 21a:	19 f0       	breq	.+6      	; 0x222 <GENERATE_WAVE+0x1e>
 21c:	21 30       	cpi	r18, 0x01	; 1
 21e:	b9 f0       	breq	.+46     	; 0x24e <GENERATE_WAVE+0x4a>
 220:	26 c0       	rjmp	.+76     	; 0x26e <GENERATE_WAVE+0x6a>
	{case NON_INVERTED:OCR0=(((256*DUTY_CYLCE)/100)-1);break;
 222:	20 e0       	ldi	r18, 0x00	; 0
 224:	30 e0       	ldi	r19, 0x00	; 0
 226:	40 e8       	ldi	r20, 0x80	; 128
 228:	53 e4       	ldi	r21, 0x43	; 67
 22a:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <__mulsf3>
 22e:	20 e0       	ldi	r18, 0x00	; 0
 230:	30 e0       	ldi	r19, 0x00	; 0
 232:	48 ec       	ldi	r20, 0xC8	; 200
 234:	52 e4       	ldi	r21, 0x42	; 66
 236:	0e 94 ff 01 	call	0x3fe	; 0x3fe <__divsf3>
 23a:	20 e0       	ldi	r18, 0x00	; 0
 23c:	30 e0       	ldi	r19, 0x00	; 0
 23e:	40 e8       	ldi	r20, 0x80	; 128
 240:	5f e3       	ldi	r21, 0x3F	; 63
 242:	0e 94 92 01 	call	0x324	; 0x324 <__subsf3>
 246:	0e 94 71 02 	call	0x4e2	; 0x4e2 <__fixunssfsi>
 24a:	6c bf       	out	0x3c, r22	; 60
 24c:	08 95       	ret
	 case INVERTED:OCR0=(255-(256/100)*DUTY_CYLCE);break;
 24e:	9b 01       	movw	r18, r22
 250:	ac 01       	movw	r20, r24
 252:	0e 94 93 01 	call	0x326	; 0x326 <__addsf3>
 256:	9b 01       	movw	r18, r22
 258:	ac 01       	movw	r20, r24
 25a:	60 e0       	ldi	r22, 0x00	; 0
 25c:	70 e0       	ldi	r23, 0x00	; 0
 25e:	8f e7       	ldi	r24, 0x7F	; 127
 260:	93 e4       	ldi	r25, 0x43	; 67
 262:	0e 94 92 01 	call	0x324	; 0x324 <__subsf3>
 266:	0e 94 71 02 	call	0x4e2	; 0x4e2 <__fixunssfsi>
 26a:	6c bf       	out	0x3c, r22	; 60
 26c:	08 95       	ret
	 //default NON-INVERTED 
	 default:OCR0=(((256*DUTY_CYLCE)/100)-1);break;}break;
 26e:	20 e0       	ldi	r18, 0x00	; 0
 270:	30 e0       	ldi	r19, 0x00	; 0
 272:	40 e8       	ldi	r20, 0x80	; 128
 274:	53 e4       	ldi	r21, 0x43	; 67
 276:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <__mulsf3>
 27a:	20 e0       	ldi	r18, 0x00	; 0
 27c:	30 e0       	ldi	r19, 0x00	; 0
 27e:	48 ec       	ldi	r20, 0xC8	; 200
 280:	52 e4       	ldi	r21, 0x42	; 66
 282:	0e 94 ff 01 	call	0x3fe	; 0x3fe <__divsf3>
 286:	20 e0       	ldi	r18, 0x00	; 0
 288:	30 e0       	ldi	r19, 0x00	; 0
 28a:	40 e8       	ldi	r20, 0x80	; 128
 28c:	5f e3       	ldi	r21, 0x3F	; 63
 28e:	0e 94 92 01 	call	0x324	; 0x324 <__subsf3>
 292:	0e 94 71 02 	call	0x4e2	; 0x4e2 <__fixunssfsi>
 296:	6c bf       	out	0x3c, r22	; 60
 298:	08 95       	ret
	 case PHASE_CORRECT:
	switch(comp)
 29a:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 29e:	22 30       	cpi	r18, 0x02	; 2
 2a0:	19 f0       	breq	.+6      	; 0x2a8 <GENERATE_WAVE+0xa4>
 2a2:	23 30       	cpi	r18, 0x03	; 3
 2a4:	89 f0       	breq	.+34     	; 0x2c8 <GENERATE_WAVE+0xc4>
 2a6:	28 c0       	rjmp	.+80     	; 0x2f8 <GENERATE_WAVE+0xf4>
	{case CLR_UP_SET_DOWN:OCR0=(((255*DUTY_CYLCE)/100));break;
 2a8:	20 e0       	ldi	r18, 0x00	; 0
 2aa:	30 e0       	ldi	r19, 0x00	; 0
 2ac:	4f e7       	ldi	r20, 0x7F	; 127
 2ae:	53 e4       	ldi	r21, 0x43	; 67
 2b0:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <__mulsf3>
 2b4:	20 e0       	ldi	r18, 0x00	; 0
 2b6:	30 e0       	ldi	r19, 0x00	; 0
 2b8:	48 ec       	ldi	r20, 0xC8	; 200
 2ba:	52 e4       	ldi	r21, 0x42	; 66
 2bc:	0e 94 ff 01 	call	0x3fe	; 0x3fe <__divsf3>
 2c0:	0e 94 71 02 	call	0x4e2	; 0x4e2 <__fixunssfsi>
 2c4:	6c bf       	out	0x3c, r22	; 60
 2c6:	08 95       	ret
		case SET_UP_CLR_DOWN:OCR0=(255-((255*DUTY_CYLCE)/100));break;
 2c8:	20 e0       	ldi	r18, 0x00	; 0
 2ca:	30 e0       	ldi	r19, 0x00	; 0
 2cc:	4f e7       	ldi	r20, 0x7F	; 127
 2ce:	53 e4       	ldi	r21, 0x43	; 67
 2d0:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <__mulsf3>
 2d4:	20 e0       	ldi	r18, 0x00	; 0
 2d6:	30 e0       	ldi	r19, 0x00	; 0
 2d8:	48 ec       	ldi	r20, 0xC8	; 200
 2da:	52 e4       	ldi	r21, 0x42	; 66
 2dc:	0e 94 ff 01 	call	0x3fe	; 0x3fe <__divsf3>
 2e0:	9b 01       	movw	r18, r22
 2e2:	ac 01       	movw	r20, r24
 2e4:	60 e0       	ldi	r22, 0x00	; 0
 2e6:	70 e0       	ldi	r23, 0x00	; 0
 2e8:	8f e7       	ldi	r24, 0x7F	; 127
 2ea:	93 e4       	ldi	r25, 0x43	; 67
 2ec:	0e 94 92 01 	call	0x324	; 0x324 <__subsf3>
 2f0:	0e 94 71 02 	call	0x4e2	; 0x4e2 <__fixunssfsi>
 2f4:	6c bf       	out	0x3c, r22	; 60
 2f6:	08 95       	ret
		//default CLR-UP SET DOWN
	default:OCR0=(((256*DUTY_CYLCE)/100)-1);break;}break;
 2f8:	20 e0       	ldi	r18, 0x00	; 0
 2fa:	30 e0       	ldi	r19, 0x00	; 0
 2fc:	40 e8       	ldi	r20, 0x80	; 128
 2fe:	53 e4       	ldi	r21, 0x43	; 67
 300:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <__mulsf3>
 304:	20 e0       	ldi	r18, 0x00	; 0
 306:	30 e0       	ldi	r19, 0x00	; 0
 308:	48 ec       	ldi	r20, 0xC8	; 200
 30a:	52 e4       	ldi	r21, 0x42	; 66
 30c:	0e 94 ff 01 	call	0x3fe	; 0x3fe <__divsf3>
 310:	20 e0       	ldi	r18, 0x00	; 0
 312:	30 e0       	ldi	r19, 0x00	; 0
 314:	40 e8       	ldi	r20, 0x80	; 128
 316:	5f e3       	ldi	r21, 0x3F	; 63
 318:	0e 94 92 01 	call	0x324	; 0x324 <__subsf3>
 31c:	0e 94 71 02 	call	0x4e2	; 0x4e2 <__fixunssfsi>
 320:	6c bf       	out	0x3c, r22	; 60
 322:	08 95       	ret

00000324 <__subsf3>:
 324:	50 58       	subi	r21, 0x80	; 128

00000326 <__addsf3>:
 326:	bb 27       	eor	r27, r27
 328:	aa 27       	eor	r26, r26
 32a:	0e 94 aa 01 	call	0x354	; 0x354 <__addsf3x>
 32e:	0c 94 b7 02 	jmp	0x56e	; 0x56e <__fp_round>
 332:	0e 94 a9 02 	call	0x552	; 0x552 <__fp_pscA>
 336:	38 f0       	brcs	.+14     	; 0x346 <__addsf3+0x20>
 338:	0e 94 b0 02 	call	0x560	; 0x560 <__fp_pscB>
 33c:	20 f0       	brcs	.+8      	; 0x346 <__addsf3+0x20>
 33e:	39 f4       	brne	.+14     	; 0x34e <__addsf3+0x28>
 340:	9f 3f       	cpi	r25, 0xFF	; 255
 342:	19 f4       	brne	.+6      	; 0x34a <__addsf3+0x24>
 344:	26 f4       	brtc	.+8      	; 0x34e <__addsf3+0x28>
 346:	0c 94 a6 02 	jmp	0x54c	; 0x54c <__fp_nan>
 34a:	0e f4       	brtc	.+2      	; 0x34e <__addsf3+0x28>
 34c:	e0 95       	com	r30
 34e:	e7 fb       	bst	r30, 7
 350:	0c 94 a0 02 	jmp	0x540	; 0x540 <__fp_inf>

00000354 <__addsf3x>:
 354:	e9 2f       	mov	r30, r25
 356:	0e 94 c8 02 	call	0x590	; 0x590 <__fp_split3>
 35a:	58 f3       	brcs	.-42     	; 0x332 <__addsf3+0xc>
 35c:	ba 17       	cp	r27, r26
 35e:	62 07       	cpc	r22, r18
 360:	73 07       	cpc	r23, r19
 362:	84 07       	cpc	r24, r20
 364:	95 07       	cpc	r25, r21
 366:	20 f0       	brcs	.+8      	; 0x370 <__addsf3x+0x1c>
 368:	79 f4       	brne	.+30     	; 0x388 <__addsf3x+0x34>
 36a:	a6 f5       	brtc	.+104    	; 0x3d4 <__addsf3x+0x80>
 36c:	0c 94 ea 02 	jmp	0x5d4	; 0x5d4 <__fp_zero>
 370:	0e f4       	brtc	.+2      	; 0x374 <__addsf3x+0x20>
 372:	e0 95       	com	r30
 374:	0b 2e       	mov	r0, r27
 376:	ba 2f       	mov	r27, r26
 378:	a0 2d       	mov	r26, r0
 37a:	0b 01       	movw	r0, r22
 37c:	b9 01       	movw	r22, r18
 37e:	90 01       	movw	r18, r0
 380:	0c 01       	movw	r0, r24
 382:	ca 01       	movw	r24, r20
 384:	a0 01       	movw	r20, r0
 386:	11 24       	eor	r1, r1
 388:	ff 27       	eor	r31, r31
 38a:	59 1b       	sub	r21, r25
 38c:	99 f0       	breq	.+38     	; 0x3b4 <__addsf3x+0x60>
 38e:	59 3f       	cpi	r21, 0xF9	; 249
 390:	50 f4       	brcc	.+20     	; 0x3a6 <__addsf3x+0x52>
 392:	50 3e       	cpi	r21, 0xE0	; 224
 394:	68 f1       	brcs	.+90     	; 0x3f0 <__addsf3x+0x9c>
 396:	1a 16       	cp	r1, r26
 398:	f0 40       	sbci	r31, 0x00	; 0
 39a:	a2 2f       	mov	r26, r18
 39c:	23 2f       	mov	r18, r19
 39e:	34 2f       	mov	r19, r20
 3a0:	44 27       	eor	r20, r20
 3a2:	58 5f       	subi	r21, 0xF8	; 248
 3a4:	f3 cf       	rjmp	.-26     	; 0x38c <__addsf3x+0x38>
 3a6:	46 95       	lsr	r20
 3a8:	37 95       	ror	r19
 3aa:	27 95       	ror	r18
 3ac:	a7 95       	ror	r26
 3ae:	f0 40       	sbci	r31, 0x00	; 0
 3b0:	53 95       	inc	r21
 3b2:	c9 f7       	brne	.-14     	; 0x3a6 <__addsf3x+0x52>
 3b4:	7e f4       	brtc	.+30     	; 0x3d4 <__addsf3x+0x80>
 3b6:	1f 16       	cp	r1, r31
 3b8:	ba 0b       	sbc	r27, r26
 3ba:	62 0b       	sbc	r22, r18
 3bc:	73 0b       	sbc	r23, r19
 3be:	84 0b       	sbc	r24, r20
 3c0:	ba f0       	brmi	.+46     	; 0x3f0 <__addsf3x+0x9c>
 3c2:	91 50       	subi	r25, 0x01	; 1
 3c4:	a1 f0       	breq	.+40     	; 0x3ee <__addsf3x+0x9a>
 3c6:	ff 0f       	add	r31, r31
 3c8:	bb 1f       	adc	r27, r27
 3ca:	66 1f       	adc	r22, r22
 3cc:	77 1f       	adc	r23, r23
 3ce:	88 1f       	adc	r24, r24
 3d0:	c2 f7       	brpl	.-16     	; 0x3c2 <__addsf3x+0x6e>
 3d2:	0e c0       	rjmp	.+28     	; 0x3f0 <__addsf3x+0x9c>
 3d4:	ba 0f       	add	r27, r26
 3d6:	62 1f       	adc	r22, r18
 3d8:	73 1f       	adc	r23, r19
 3da:	84 1f       	adc	r24, r20
 3dc:	48 f4       	brcc	.+18     	; 0x3f0 <__addsf3x+0x9c>
 3de:	87 95       	ror	r24
 3e0:	77 95       	ror	r23
 3e2:	67 95       	ror	r22
 3e4:	b7 95       	ror	r27
 3e6:	f7 95       	ror	r31
 3e8:	9e 3f       	cpi	r25, 0xFE	; 254
 3ea:	08 f0       	brcs	.+2      	; 0x3ee <__addsf3x+0x9a>
 3ec:	b0 cf       	rjmp	.-160    	; 0x34e <__addsf3+0x28>
 3ee:	93 95       	inc	r25
 3f0:	88 0f       	add	r24, r24
 3f2:	08 f0       	brcs	.+2      	; 0x3f6 <__addsf3x+0xa2>
 3f4:	99 27       	eor	r25, r25
 3f6:	ee 0f       	add	r30, r30
 3f8:	97 95       	ror	r25
 3fa:	87 95       	ror	r24
 3fc:	08 95       	ret

000003fe <__divsf3>:
 3fe:	0e 94 13 02 	call	0x426	; 0x426 <__divsf3x>
 402:	0c 94 b7 02 	jmp	0x56e	; 0x56e <__fp_round>
 406:	0e 94 b0 02 	call	0x560	; 0x560 <__fp_pscB>
 40a:	58 f0       	brcs	.+22     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
 40c:	0e 94 a9 02 	call	0x552	; 0x552 <__fp_pscA>
 410:	40 f0       	brcs	.+16     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
 412:	29 f4       	brne	.+10     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 414:	5f 3f       	cpi	r21, 0xFF	; 255
 416:	29 f0       	breq	.+10     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
 418:	0c 94 a0 02 	jmp	0x540	; 0x540 <__fp_inf>
 41c:	51 11       	cpse	r21, r1
 41e:	0c 94 eb 02 	jmp	0x5d6	; 0x5d6 <__fp_szero>
 422:	0c 94 a6 02 	jmp	0x54c	; 0x54c <__fp_nan>

00000426 <__divsf3x>:
 426:	0e 94 c8 02 	call	0x590	; 0x590 <__fp_split3>
 42a:	68 f3       	brcs	.-38     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>

0000042c <__divsf3_pse>:
 42c:	99 23       	and	r25, r25
 42e:	b1 f3       	breq	.-20     	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 430:	55 23       	and	r21, r21
 432:	91 f3       	breq	.-28     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 434:	95 1b       	sub	r25, r21
 436:	55 0b       	sbc	r21, r21
 438:	bb 27       	eor	r27, r27
 43a:	aa 27       	eor	r26, r26
 43c:	62 17       	cp	r22, r18
 43e:	73 07       	cpc	r23, r19
 440:	84 07       	cpc	r24, r20
 442:	38 f0       	brcs	.+14     	; 0x452 <__divsf3_pse+0x26>
 444:	9f 5f       	subi	r25, 0xFF	; 255
 446:	5f 4f       	sbci	r21, 0xFF	; 255
 448:	22 0f       	add	r18, r18
 44a:	33 1f       	adc	r19, r19
 44c:	44 1f       	adc	r20, r20
 44e:	aa 1f       	adc	r26, r26
 450:	a9 f3       	breq	.-22     	; 0x43c <__divsf3_pse+0x10>
 452:	35 d0       	rcall	.+106    	; 0x4be <__divsf3_pse+0x92>
 454:	0e 2e       	mov	r0, r30
 456:	3a f0       	brmi	.+14     	; 0x466 <__divsf3_pse+0x3a>
 458:	e0 e8       	ldi	r30, 0x80	; 128
 45a:	32 d0       	rcall	.+100    	; 0x4c0 <__divsf3_pse+0x94>
 45c:	91 50       	subi	r25, 0x01	; 1
 45e:	50 40       	sbci	r21, 0x00	; 0
 460:	e6 95       	lsr	r30
 462:	00 1c       	adc	r0, r0
 464:	ca f7       	brpl	.-14     	; 0x458 <__divsf3_pse+0x2c>
 466:	2b d0       	rcall	.+86     	; 0x4be <__divsf3_pse+0x92>
 468:	fe 2f       	mov	r31, r30
 46a:	29 d0       	rcall	.+82     	; 0x4be <__divsf3_pse+0x92>
 46c:	66 0f       	add	r22, r22
 46e:	77 1f       	adc	r23, r23
 470:	88 1f       	adc	r24, r24
 472:	bb 1f       	adc	r27, r27
 474:	26 17       	cp	r18, r22
 476:	37 07       	cpc	r19, r23
 478:	48 07       	cpc	r20, r24
 47a:	ab 07       	cpc	r26, r27
 47c:	b0 e8       	ldi	r27, 0x80	; 128
 47e:	09 f0       	breq	.+2      	; 0x482 <__divsf3_pse+0x56>
 480:	bb 0b       	sbc	r27, r27
 482:	80 2d       	mov	r24, r0
 484:	bf 01       	movw	r22, r30
 486:	ff 27       	eor	r31, r31
 488:	93 58       	subi	r25, 0x83	; 131
 48a:	5f 4f       	sbci	r21, 0xFF	; 255
 48c:	3a f0       	brmi	.+14     	; 0x49c <__divsf3_pse+0x70>
 48e:	9e 3f       	cpi	r25, 0xFE	; 254
 490:	51 05       	cpc	r21, r1
 492:	78 f0       	brcs	.+30     	; 0x4b2 <__divsf3_pse+0x86>
 494:	0c 94 a0 02 	jmp	0x540	; 0x540 <__fp_inf>
 498:	0c 94 eb 02 	jmp	0x5d6	; 0x5d6 <__fp_szero>
 49c:	5f 3f       	cpi	r21, 0xFF	; 255
 49e:	e4 f3       	brlt	.-8      	; 0x498 <__divsf3_pse+0x6c>
 4a0:	98 3e       	cpi	r25, 0xE8	; 232
 4a2:	d4 f3       	brlt	.-12     	; 0x498 <__divsf3_pse+0x6c>
 4a4:	86 95       	lsr	r24
 4a6:	77 95       	ror	r23
 4a8:	67 95       	ror	r22
 4aa:	b7 95       	ror	r27
 4ac:	f7 95       	ror	r31
 4ae:	9f 5f       	subi	r25, 0xFF	; 255
 4b0:	c9 f7       	brne	.-14     	; 0x4a4 <__divsf3_pse+0x78>
 4b2:	88 0f       	add	r24, r24
 4b4:	91 1d       	adc	r25, r1
 4b6:	96 95       	lsr	r25
 4b8:	87 95       	ror	r24
 4ba:	97 f9       	bld	r25, 7
 4bc:	08 95       	ret
 4be:	e1 e0       	ldi	r30, 0x01	; 1
 4c0:	66 0f       	add	r22, r22
 4c2:	77 1f       	adc	r23, r23
 4c4:	88 1f       	adc	r24, r24
 4c6:	bb 1f       	adc	r27, r27
 4c8:	62 17       	cp	r22, r18
 4ca:	73 07       	cpc	r23, r19
 4cc:	84 07       	cpc	r24, r20
 4ce:	ba 07       	cpc	r27, r26
 4d0:	20 f0       	brcs	.+8      	; 0x4da <__divsf3_pse+0xae>
 4d2:	62 1b       	sub	r22, r18
 4d4:	73 0b       	sbc	r23, r19
 4d6:	84 0b       	sbc	r24, r20
 4d8:	ba 0b       	sbc	r27, r26
 4da:	ee 1f       	adc	r30, r30
 4dc:	88 f7       	brcc	.-30     	; 0x4c0 <__divsf3_pse+0x94>
 4de:	e0 95       	com	r30
 4e0:	08 95       	ret

000004e2 <__fixunssfsi>:
 4e2:	0e 94 d0 02 	call	0x5a0	; 0x5a0 <__fp_splitA>
 4e6:	88 f0       	brcs	.+34     	; 0x50a <__fixunssfsi+0x28>
 4e8:	9f 57       	subi	r25, 0x7F	; 127
 4ea:	98 f0       	brcs	.+38     	; 0x512 <__fixunssfsi+0x30>
 4ec:	b9 2f       	mov	r27, r25
 4ee:	99 27       	eor	r25, r25
 4f0:	b7 51       	subi	r27, 0x17	; 23
 4f2:	b0 f0       	brcs	.+44     	; 0x520 <__fixunssfsi+0x3e>
 4f4:	e1 f0       	breq	.+56     	; 0x52e <__fixunssfsi+0x4c>
 4f6:	66 0f       	add	r22, r22
 4f8:	77 1f       	adc	r23, r23
 4fa:	88 1f       	adc	r24, r24
 4fc:	99 1f       	adc	r25, r25
 4fe:	1a f0       	brmi	.+6      	; 0x506 <__fixunssfsi+0x24>
 500:	ba 95       	dec	r27
 502:	c9 f7       	brne	.-14     	; 0x4f6 <__fixunssfsi+0x14>
 504:	14 c0       	rjmp	.+40     	; 0x52e <__fixunssfsi+0x4c>
 506:	b1 30       	cpi	r27, 0x01	; 1
 508:	91 f0       	breq	.+36     	; 0x52e <__fixunssfsi+0x4c>
 50a:	0e 94 ea 02 	call	0x5d4	; 0x5d4 <__fp_zero>
 50e:	b1 e0       	ldi	r27, 0x01	; 1
 510:	08 95       	ret
 512:	0c 94 ea 02 	jmp	0x5d4	; 0x5d4 <__fp_zero>
 516:	67 2f       	mov	r22, r23
 518:	78 2f       	mov	r23, r24
 51a:	88 27       	eor	r24, r24
 51c:	b8 5f       	subi	r27, 0xF8	; 248
 51e:	39 f0       	breq	.+14     	; 0x52e <__fixunssfsi+0x4c>
 520:	b9 3f       	cpi	r27, 0xF9	; 249
 522:	cc f3       	brlt	.-14     	; 0x516 <__fixunssfsi+0x34>
 524:	86 95       	lsr	r24
 526:	77 95       	ror	r23
 528:	67 95       	ror	r22
 52a:	b3 95       	inc	r27
 52c:	d9 f7       	brne	.-10     	; 0x524 <__fixunssfsi+0x42>
 52e:	3e f4       	brtc	.+14     	; 0x53e <__fixunssfsi+0x5c>
 530:	90 95       	com	r25
 532:	80 95       	com	r24
 534:	70 95       	com	r23
 536:	61 95       	neg	r22
 538:	7f 4f       	sbci	r23, 0xFF	; 255
 53a:	8f 4f       	sbci	r24, 0xFF	; 255
 53c:	9f 4f       	sbci	r25, 0xFF	; 255
 53e:	08 95       	ret

00000540 <__fp_inf>:
 540:	97 f9       	bld	r25, 7
 542:	9f 67       	ori	r25, 0x7F	; 127
 544:	80 e8       	ldi	r24, 0x80	; 128
 546:	70 e0       	ldi	r23, 0x00	; 0
 548:	60 e0       	ldi	r22, 0x00	; 0
 54a:	08 95       	ret

0000054c <__fp_nan>:
 54c:	9f ef       	ldi	r25, 0xFF	; 255
 54e:	80 ec       	ldi	r24, 0xC0	; 192
 550:	08 95       	ret

00000552 <__fp_pscA>:
 552:	00 24       	eor	r0, r0
 554:	0a 94       	dec	r0
 556:	16 16       	cp	r1, r22
 558:	17 06       	cpc	r1, r23
 55a:	18 06       	cpc	r1, r24
 55c:	09 06       	cpc	r0, r25
 55e:	08 95       	ret

00000560 <__fp_pscB>:
 560:	00 24       	eor	r0, r0
 562:	0a 94       	dec	r0
 564:	12 16       	cp	r1, r18
 566:	13 06       	cpc	r1, r19
 568:	14 06       	cpc	r1, r20
 56a:	05 06       	cpc	r0, r21
 56c:	08 95       	ret

0000056e <__fp_round>:
 56e:	09 2e       	mov	r0, r25
 570:	03 94       	inc	r0
 572:	00 0c       	add	r0, r0
 574:	11 f4       	brne	.+4      	; 0x57a <__fp_round+0xc>
 576:	88 23       	and	r24, r24
 578:	52 f0       	brmi	.+20     	; 0x58e <__fp_round+0x20>
 57a:	bb 0f       	add	r27, r27
 57c:	40 f4       	brcc	.+16     	; 0x58e <__fp_round+0x20>
 57e:	bf 2b       	or	r27, r31
 580:	11 f4       	brne	.+4      	; 0x586 <__fp_round+0x18>
 582:	60 ff       	sbrs	r22, 0
 584:	04 c0       	rjmp	.+8      	; 0x58e <__fp_round+0x20>
 586:	6f 5f       	subi	r22, 0xFF	; 255
 588:	7f 4f       	sbci	r23, 0xFF	; 255
 58a:	8f 4f       	sbci	r24, 0xFF	; 255
 58c:	9f 4f       	sbci	r25, 0xFF	; 255
 58e:	08 95       	ret

00000590 <__fp_split3>:
 590:	57 fd       	sbrc	r21, 7
 592:	90 58       	subi	r25, 0x80	; 128
 594:	44 0f       	add	r20, r20
 596:	55 1f       	adc	r21, r21
 598:	59 f0       	breq	.+22     	; 0x5b0 <__fp_splitA+0x10>
 59a:	5f 3f       	cpi	r21, 0xFF	; 255
 59c:	71 f0       	breq	.+28     	; 0x5ba <__fp_splitA+0x1a>
 59e:	47 95       	ror	r20

000005a0 <__fp_splitA>:
 5a0:	88 0f       	add	r24, r24
 5a2:	97 fb       	bst	r25, 7
 5a4:	99 1f       	adc	r25, r25
 5a6:	61 f0       	breq	.+24     	; 0x5c0 <__fp_splitA+0x20>
 5a8:	9f 3f       	cpi	r25, 0xFF	; 255
 5aa:	79 f0       	breq	.+30     	; 0x5ca <__fp_splitA+0x2a>
 5ac:	87 95       	ror	r24
 5ae:	08 95       	ret
 5b0:	12 16       	cp	r1, r18
 5b2:	13 06       	cpc	r1, r19
 5b4:	14 06       	cpc	r1, r20
 5b6:	55 1f       	adc	r21, r21
 5b8:	f2 cf       	rjmp	.-28     	; 0x59e <__fp_split3+0xe>
 5ba:	46 95       	lsr	r20
 5bc:	f1 df       	rcall	.-30     	; 0x5a0 <__fp_splitA>
 5be:	08 c0       	rjmp	.+16     	; 0x5d0 <__fp_splitA+0x30>
 5c0:	16 16       	cp	r1, r22
 5c2:	17 06       	cpc	r1, r23
 5c4:	18 06       	cpc	r1, r24
 5c6:	99 1f       	adc	r25, r25
 5c8:	f1 cf       	rjmp	.-30     	; 0x5ac <__fp_splitA+0xc>
 5ca:	86 95       	lsr	r24
 5cc:	71 05       	cpc	r23, r1
 5ce:	61 05       	cpc	r22, r1
 5d0:	08 94       	sec
 5d2:	08 95       	ret

000005d4 <__fp_zero>:
 5d4:	e8 94       	clt

000005d6 <__fp_szero>:
 5d6:	bb 27       	eor	r27, r27
 5d8:	66 27       	eor	r22, r22
 5da:	77 27       	eor	r23, r23
 5dc:	cb 01       	movw	r24, r22
 5de:	97 f9       	bld	r25, 7
 5e0:	08 95       	ret

000005e2 <__mulsf3>:
 5e2:	0e 94 04 03 	call	0x608	; 0x608 <__mulsf3x>
 5e6:	0c 94 b7 02 	jmp	0x56e	; 0x56e <__fp_round>
 5ea:	0e 94 a9 02 	call	0x552	; 0x552 <__fp_pscA>
 5ee:	38 f0       	brcs	.+14     	; 0x5fe <__mulsf3+0x1c>
 5f0:	0e 94 b0 02 	call	0x560	; 0x560 <__fp_pscB>
 5f4:	20 f0       	brcs	.+8      	; 0x5fe <__mulsf3+0x1c>
 5f6:	95 23       	and	r25, r21
 5f8:	11 f0       	breq	.+4      	; 0x5fe <__mulsf3+0x1c>
 5fa:	0c 94 a0 02 	jmp	0x540	; 0x540 <__fp_inf>
 5fe:	0c 94 a6 02 	jmp	0x54c	; 0x54c <__fp_nan>
 602:	11 24       	eor	r1, r1
 604:	0c 94 eb 02 	jmp	0x5d6	; 0x5d6 <__fp_szero>

00000608 <__mulsf3x>:
 608:	0e 94 c8 02 	call	0x590	; 0x590 <__fp_split3>
 60c:	70 f3       	brcs	.-36     	; 0x5ea <__mulsf3+0x8>

0000060e <__mulsf3_pse>:
 60e:	95 9f       	mul	r25, r21
 610:	c1 f3       	breq	.-16     	; 0x602 <__mulsf3+0x20>
 612:	95 0f       	add	r25, r21
 614:	50 e0       	ldi	r21, 0x00	; 0
 616:	55 1f       	adc	r21, r21
 618:	62 9f       	mul	r22, r18
 61a:	f0 01       	movw	r30, r0
 61c:	72 9f       	mul	r23, r18
 61e:	bb 27       	eor	r27, r27
 620:	f0 0d       	add	r31, r0
 622:	b1 1d       	adc	r27, r1
 624:	63 9f       	mul	r22, r19
 626:	aa 27       	eor	r26, r26
 628:	f0 0d       	add	r31, r0
 62a:	b1 1d       	adc	r27, r1
 62c:	aa 1f       	adc	r26, r26
 62e:	64 9f       	mul	r22, r20
 630:	66 27       	eor	r22, r22
 632:	b0 0d       	add	r27, r0
 634:	a1 1d       	adc	r26, r1
 636:	66 1f       	adc	r22, r22
 638:	82 9f       	mul	r24, r18
 63a:	22 27       	eor	r18, r18
 63c:	b0 0d       	add	r27, r0
 63e:	a1 1d       	adc	r26, r1
 640:	62 1f       	adc	r22, r18
 642:	73 9f       	mul	r23, r19
 644:	b0 0d       	add	r27, r0
 646:	a1 1d       	adc	r26, r1
 648:	62 1f       	adc	r22, r18
 64a:	83 9f       	mul	r24, r19
 64c:	a0 0d       	add	r26, r0
 64e:	61 1d       	adc	r22, r1
 650:	22 1f       	adc	r18, r18
 652:	74 9f       	mul	r23, r20
 654:	33 27       	eor	r19, r19
 656:	a0 0d       	add	r26, r0
 658:	61 1d       	adc	r22, r1
 65a:	23 1f       	adc	r18, r19
 65c:	84 9f       	mul	r24, r20
 65e:	60 0d       	add	r22, r0
 660:	21 1d       	adc	r18, r1
 662:	82 2f       	mov	r24, r18
 664:	76 2f       	mov	r23, r22
 666:	6a 2f       	mov	r22, r26
 668:	11 24       	eor	r1, r1
 66a:	9f 57       	subi	r25, 0x7F	; 127
 66c:	50 40       	sbci	r21, 0x00	; 0
 66e:	9a f0       	brmi	.+38     	; 0x696 <__mulsf3_pse+0x88>
 670:	f1 f0       	breq	.+60     	; 0x6ae <__mulsf3_pse+0xa0>
 672:	88 23       	and	r24, r24
 674:	4a f0       	brmi	.+18     	; 0x688 <__mulsf3_pse+0x7a>
 676:	ee 0f       	add	r30, r30
 678:	ff 1f       	adc	r31, r31
 67a:	bb 1f       	adc	r27, r27
 67c:	66 1f       	adc	r22, r22
 67e:	77 1f       	adc	r23, r23
 680:	88 1f       	adc	r24, r24
 682:	91 50       	subi	r25, 0x01	; 1
 684:	50 40       	sbci	r21, 0x00	; 0
 686:	a9 f7       	brne	.-22     	; 0x672 <__mulsf3_pse+0x64>
 688:	9e 3f       	cpi	r25, 0xFE	; 254
 68a:	51 05       	cpc	r21, r1
 68c:	80 f0       	brcs	.+32     	; 0x6ae <__mulsf3_pse+0xa0>
 68e:	0c 94 a0 02 	jmp	0x540	; 0x540 <__fp_inf>
 692:	0c 94 eb 02 	jmp	0x5d6	; 0x5d6 <__fp_szero>
 696:	5f 3f       	cpi	r21, 0xFF	; 255
 698:	e4 f3       	brlt	.-8      	; 0x692 <__mulsf3_pse+0x84>
 69a:	98 3e       	cpi	r25, 0xE8	; 232
 69c:	d4 f3       	brlt	.-12     	; 0x692 <__mulsf3_pse+0x84>
 69e:	86 95       	lsr	r24
 6a0:	77 95       	ror	r23
 6a2:	67 95       	ror	r22
 6a4:	b7 95       	ror	r27
 6a6:	f7 95       	ror	r31
 6a8:	e7 95       	ror	r30
 6aa:	9f 5f       	subi	r25, 0xFF	; 255
 6ac:	c1 f7       	brne	.-16     	; 0x69e <__mulsf3_pse+0x90>
 6ae:	fe 2b       	or	r31, r30
 6b0:	88 0f       	add	r24, r24
 6b2:	91 1d       	adc	r25, r1
 6b4:	96 95       	lsr	r25
 6b6:	87 95       	ror	r24
 6b8:	97 f9       	bld	r25, 7
 6ba:	08 95       	ret

000006bc <_exit>:
 6bc:	f8 94       	cli

000006be <__stop_program>:
 6be:	ff cf       	rjmp	.-2      	; 0x6be <__stop_program>
